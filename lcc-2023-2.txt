PROGRAM -> STATEMENT | FUNCLIST | \epsilon
FUNCLIST -> FUNCDEF F`
F` -> FUNCLIST | \epsilon
FUNCDEF -> def ident( PARAMLIST ) { STATELIST }
PARAMLIST -> \epsilon | int G` | float G` | string G`
G` -> \epsilon | ident | ident, PARAMLIST
STATEMENT -> VARDECL ; | ATRIBSTAT ; | PRINTSTAT ; | READSTAT ; | RETURNSTAT ; | IFSTAT | FORSTAT | { STATELIST } | break ; | ;
VARDECL -> int ident E` | float ident E` | string ident E`
E` -> [ int_constant ] E` | \epsilon
ATRIBSTAT -> LVALUE = H`
H` -> EXPRESSION | ALLOCEXPRESSION | FUNCCALL
FUNCCALL -> ident( PARAMLISTCALL )
PARAMLISTCALL -> I` | \epsilon
I` -> \epsilon | ident | ident, PARAMLISTCALL
PRINTSTAT -> print EXPRESSION
READSTAT -> read LVALUE
RETURNSTAT -> return
IFSTAT -> if ( EXPRESSION ) STATEMENT J`
J` -> \epsilon | else STATEMENT
FORSTAT -> for ( ATRIBSTAT ; EXPRESSION ; ATRIBSTAT ) STATEMENT
STATELIST -> STATEMENT K`
K` -> \epsilon | STATELIST
ALLOCEXPRESSION -> new D`
D` -> int [ NUMEXPRESSION ] Z | float [ NUMEXPRESSION ] Z | string [ NUMEXPRESSION ] Z
Z ->  \epsilon | [ NUMEXPRESSION ] Z
EXPRESSION -> NUMEXPRESSION L`
L` -> \epsilon | < NUMEXPRESSION | > NUMEXPRESSION | <= NUMEXPRESSION | >= NUMEXPRESSION | == NUMEXPRESSION | != NUMEXPRESSION
NUMEXPRESSION -> TERM A`
A` -> \epsilon | + TERM A` | - TERM A`
TERM -> UNARYEXPR C`
C` ->  \epsilon | * UNARYEXPR C` | / UNARYEXPR C` | % UNARYEXPR C`
UNARYEXPR -> + FACTOR | - FACTOR | FACTOR
FACTOR -> int_constant | float_constant | string_constant | null | LVALUE | ( NUMEXPRESSION )
LVALUE -> ident B`
B` -> \epsilon | [ NUMEXPRESSION ] B`